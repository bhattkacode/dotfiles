 exec-once = sudo /usr/local/sbin/mute-led
# #######################################################################################
# AUTOGENERATED HYPR CONFIG.
# PLEASE USE THE CONFIG PROVIDED IN THE GIT REPO /examples/hypr.conf AND EDIT IT,
# OR EDIT THIS ONE ACCORDING TO THE WIKI INSTRUCTIONS.
# #######################################################################################

#
# Please note not all available settings / options are set here.
# For a full list, see the wiki
#

# See https://wiki.hyprland.org/Configuring/Monitors/
monitor=,1920x1080,auto,1.25

# See https://wiki.hyprland.org/Configuring/Keywords/ for more

# Execute your favorite apps at launch
exec-once = ~/scripts/lock
exec-once = foot --server
exec-once = waybar
# exec-once = hyprpaper
exec-once = swaybg -i $(find ~/wallpapers/ -type f | shuf -n1)
exec-once = wl-paste --watch cliphist store    
exec-once = rm "$HOME/.cache/cliphist/db"
exec-once = ~/scripts/startScratch.sh
# exec-once = [workspace special:term silent] foot -a scratch -e tmux new-session -A -s "scratch"
# exec-once = sleep 1 && tmux send-keys -t scratch.1 "todon" ENTER
# exec-once = [workspace special:extra silent] thorium-browser 
# exec-once = [workspace special:term silent] alacritty --class scratch -e tmux new-session -A -s "scratch" && sleep 1 && tmux send-keys -t scratch.1 "todon" ENTER
exec-once = nm-applet --no-agent
exec-once = ~/scripts/blu-notif
exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec-once = ~/scripts/bat-notif.sh
# exec-once = wlsunset
exec-once = dotoold
# exec-once = [[ $(cat /sys/class/power_supply/BAT0/status) == "Discharging" ]] && bluetoothctl power off
exec-once = bluetoothctl power off
exec-once = thorium-browser
# exec-once = firefox
# exec-once = line=$(sed -n "3p" /etc/keyd/default.conf); if [[ $line == \#* ]]; then sudo sed -i "3s/^#//" /etc/keyd/default.conf; fi; sudo keyd reload
exec-once = ~/scripts/mouseSim

# Source a file (multi-file configs)
source = ~/.config/hypr/mocha.conf

# Set programs that you use
$terminal = footclient
$fileManager = thunar
$menu = wofi --show drun

# Some default env vars.
env = GDK_SCALE,1.25
# env = HYPRCURSOR_THEME,Bibata-Classic
# env = HYPRCURSOR_SIZE,24
env = XCURSOR_SIZE,24
env = QT_QPA_PLATFORMTHEME,qt5ct # change to qt6ct if you have that
# env = WLR_DRM_DEVICES,/dev/dri/card0
#
exec-once = hyprctl setcursor "Banana" 32
exec = gsettings set org.gnome.desktop.interface cursor-theme "Banana"
exec = gsettings set org.gnome.desktop.interface cursor-size 32

# For all categories, see https://wiki.hyprland.org/Configuring/Variables/
input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =
    accel_profile = flat
    follow_mouse = 2

    touchpad {
        natural_scroll = yes
        scroll_factor = 0.2
    }

    sensitivity = 0.2 # -1.0 to 1.0, 0 means no modification.
    repeat_rate = 30
    repeat_delay = 270
}
device {
    name = asue1213:00-04f3:3294-touchpad
    # sensitivity = 1.5
    accel_profile = 
}
device {
    name = at-translated-set-2-keyboard
    enabled = false
}

general {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    gaps_in = 3
    gaps_out = 0
    border_size = 2
    # col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    # col.inactive_border = rgba(595959aa)
    col.active_border = $mauve $blue 45deg
    col.inactive_border = rgba(595959aa)
    layout = dwindle
    # Please see https://wiki.hyprland.org/Configuring/Tearing/ before you turn this on
    allow_tearing = false
    # no_cursor_warps = true
}

cursor {
    inactive_timeout = 2
}
binds { 
    allow_workspace_cycles = true
}

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    rounding = 10
    
    blur {
        enabled = true
        size = 4
        passes = 3
        new_optimizations = true
        # special = true
    }

    drop_shadow = yes
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
    dim_special = 0.1
    inactive_opacity = 0.9
    # dim_inactive = true
    # dim_strength = 0.1
    layerrule = blur, wofi
}

animations {
    enabled = yes

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 4, myBezier
    animation = windowsOut, 1, 4, default, popin 80%
    animation = border, 1, 4, default
    animation = borderangle, 1, 4, default
    animation = fade, 1, 4, default
    animation = workspaces, 1, 4, default
    animation = specialWorkspace, 1, 4, default, slidefadevert
}

dwindle {
    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
    pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = yes # you probably want this
    # no_gaps_when_only = 1 
    force_split = 2
}

master {
    # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
    # new_is_master = true
    # no_gaps_when_only = 1 
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = off
}

misc {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    force_default_wallpaper = -1 # Set to 0 or 1 to disable the anime mascot wallpapers
    disable_splash_rendering = true
}
xwayland {
  force_zero_scaling = true
}

# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#per-device-input-configs for more

# Example windowrule v1
# windowrule = float, ^(kitty)$
# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
windowrulev2 = suppressevent maximize, class:.* # You'll probably like this.
# workspace=s[true],gapsin:3,gapsout:80 150 80 150, border: false, shadow: true
workspace=s[true],gapsin:3,gapsout:80 150 80 150
# workspace=special:term, on-created-empty: foot -o colors.alpha=0.5 -a scratch -e tmux new-session -A -s "scratch"';sleep 1;tmux send-keys -t scratch.1 "todon" ENTER

windowrulev2 = noborder, initalclass:^(thorium-browser)$
windowrulev2 = noborder, initalclass:^(firefox)$
windowrulev2 = noborder, initalclass:^(zen-alpha)$
windowrulev2 = float, initalclass:^(float)$
windowrulev2 = float, initaltitle:^(Open File)$
windowrulev2 = float, initaltitle:^(Open Files)$
windowrulev2 = float, initaltitle:^(Save File)$
# windowrulev2 = opacity 0.1, onworkspace:s[true]


# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = ALT

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, RETURN, exec, $terminal
# bind = $mainMod, M, exit, 
# bind = $mainMod, E, exec, $fileManager
bind = $mainMod SHIFT, SPACE, togglefloating, 
bind = $mainMod, D, exec, $menu
bind = $mainMod SHIFT, D, exec, $menu --show run
# bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, E, togglesplit, # dwindle
bind = $mainMod, F, fullscreen, # dwindle

# Move focus with mainMod + arrow keys
bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

bind = $mainMod SHIFT, H, movewindow, l
bind = $mainMod SHIFT, L, movewindow, r
bind = $mainMod SHIFT, K, movewindow, u
bind = $mainMod SHIFT, J, movewindow, d

#resize
bind = ALT, R, submap, Resize
submap = Resize
binde = , l, resizeactive, 10 0
binde = , h, resizeactive, -10 0
binde = , k, resizeactive, 0 -10
binde = , j, resizeactive, 0 10
bind = , escape, submap, reset 
submap = reset

#Power
bind = ALT SHIFT, E, submap, (S)hutdown (R)eboot (L)ogout Sus(p)end (H)ibernate 
submap = (S)hutdown (R)eboot (L)ogout Sus(p)end (H)ibernate
binde = $mainMod, S, exec, shutdown now
binde = $mainMod, R, exec, systemctl reboot
binde = $mainMod, L, exec, hyprctl dispatch exit
#loginctl kill-user sahaj
binde = $mainMod, P, exec, systemctl suspend
binde = $mainMod, H, exec, systemctl hibernate
bind = , escape, submap, reset 
submap = reset

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10
bind = $mainMod, TAB, workspace, previous

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, movetoworkspacesilent, 9
bind = $mainMod SHIFT, 0, movetoworkspacesilent, 10

# Example special workspace (scratchpad)
bind = $mainMod, SPACE, togglespecialworkspace, term
bind = SUPER, SPACE, togglespecialworkspace, extra
# bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Brightness Controls
$brightnessNotif = brightness=$(brightnessctl | awk -F '[()]' '/Current brightness:/ {gsub(/%/, ""); print $2}') && notify-send -h string:x-dunst-stack-tag:brtns -t 700 -h int:value:"$brightness" "     󰃠 ${brightness}%"

binde = ,XF86MonBrightnessUp, exec, brightnessctl -c 'backlight' s +2% && $brightnessNotif
binde = ,XF86MonBrightnessDown, exec, brightnessctl -c 'backlight' s 2%- && $brightnessNotif

binde = $mainMod,XF86AudioRaiseVolume, exec, brightnessctl -c 'backlight' s 1%+ && $brightnessNotif
binde = $mainMod,XF86AudioLowerVolume, exec, brightnessctl -c 'backlight' s 1%- && $brightnessNotif
binde = $mainMod,XF86AudioMute, exec, brightnessctl -c 'backlight' s 10% && $brightnessNotif

# Volume Controls
$volumeNotif = volume=$(pamixer --get-volume) && isMuted=$(pamixer --get-mute) && notify-send -h string:x-dunst-stack-tag:vol -t 700 $([[ "$isMuted" == "false" ]] && echo "-h int:value:$volume" || echo "-h int:value:0") "$([[ "$isMuted" == "true" ]] && echo '     󰖁 ' || echo '     󰕾 ')${volume}%"

binde = ,XF86AudioRaiseVolume, exec, pamixer -i  2 --allow-boost && pkill -RTMIN+10 waybar && $volumeNotif
binde = ,XF86AudioLowerVolume, exec, pamixer -d  2 --allow-boost && pkill -RTMIN+10 waybar && $volumeNotif
binde = ,XF86AudioMute, exec, pamixer -t && pkill -RTMIN+10 waybar && $volumeNotif

$micNotif = notify-send -h string:x-dunst-stack-tag:mic -t 1000 "$([[ \"$(pamixer --default-source --get-mute)\" == \"true\" ]] && echo '󰍭 Muted' || echo '󰍬 Unmuted')"

bind = ,XF86AudioMicMute, exec, pamixer --default-source -t && $micNotif


binde = $mainMod, q, killactive,
bind = ALT SHIFT, X, exec, ~/scripts/lock

bind = $mainMod, V, exec, cliphist list | wofi --dmenu | cliphist decode | wl-copy

bind = SUPER, B, exec, ~/scripts/blu f
bind = $mainMod, A, exec, ~/scripts/blu rl
bind = SUPER SHIFT, O, exec, ~/scripts/blu o

#Screenshots
bind = $mainMod SHIFT, S, exec, ~/scripts/grimblast copy area && notify-send -t 1000 "SS Copied" 
bind = SUPER SHIFT, S, exec, ~/scripts/grimblast save area && notify-send -t 1000 "SS saved" 
bind = SUPER, Print, exec, ~/scripts/grimblast save screen && notify-send -t 1000 "SS saved" 
bind = ,Print, exec, ~/scripts/grimblast copy screen && notify-send -t 1000 "SS Copied" 

#Color Picker
bind = SUPER, C, exec, hyprpicker -a

#OCR
bind = $mainMod, o, exec, grim -g "$(slurp)" - | tesseract - - -l eng | wl-copy && notify-send -t 2000 "Copied Text:" "$(wl-paste)"

bind = SUPER, w, exec, killall waybar;waybar

bind = SUPER, R, exec, pkill swaybg; swaybg -i $(find ~/wallpapers/ -type f | shuf -n1)

bind = $mainMod, T, exec, hyprctl keyword "device[asue1213:00-04f3:3294-touchpad]:enabled" 0; pkill dotool; dotoold
bind = $mainMod SHIFT, T, exec, hyprctl keyword "device[asue1213:00-04f3:3294-touchpad]:enabled" 1; pkill dotool; dotoold
bind = ,XF86TouchpadToggle, exec, hyprctl keyword "device[asue1213:00-04f3:3294-touchpad]:enabled" 0; pkill dotool; dotoold

# bind = SUPER, F, exec, line=$(sed -n '3p' /etc/keyd/default.conf); [[ $line == \#* ]] && sudo sed -i '3s/^#//' /etc/keyd/default.conf || sudo sed -i '3s/^/#/' /etc/keyd/default.conf; sudo keyd reload

bind = CONTROL SHIFT, SPACE, exec, dunstctl close-all

bind = SUPER, left, exec, playerctl previous
bind = SUPER, right, exec, playerctl next
bind = SUPER, down, exec, playerctl play-pause

bind = ,XF86AudioPlay, exec, playerctl play-pause
bind = ,XF86AudioPause, exec, playerctl play-pause
bind = ,XF86AudioNext, exec, playerctl next
bind = ,XF86AudioPrev, exec, playerctl previous

bind = $mainMod SHIFT, ENTER, exec, foot
bind = SUPER SHIFT, D, exec, dunstctl set-paused toggle

# Mouse movement keys
# binde = SUPER, H, exec, echo "mousemove -30 0" | dotoolc
# binde = SUPER, J, exec, echo "mousemove 0 30" | dotoolc
# binde = SUPER, K, exec, echo "mousemove 0 -30" | dotoolc
# binde = SUPER, L, exec, echo "mousemove 30 0" | dotoolc
binde = SUPER, O, exec, echo "wheel -5" | dotoolc
binde = SUPER, P, exec, echo "wheel 5" | dotoolc
binde = SUPER, U, exec, echo "click left" | dotoolc
binde = SUPER, I, exec, echo "click right" | dotoolc
