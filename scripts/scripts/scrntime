#!/bin/env python3
import os
import sys
from datetime import datetime, timedelta

reboots = os.popen("last reboot").read().split("\n")
time_per_day = {}
date_fmt = "%b %d"
time_fmt = "%H:%M"
today = datetime.strftime(datetime.now(), date_fmt)
if len(sys.argv) > 2:
    print("Too many arguments")
    sys.exit(1)
daysToShow = int(sys.argv[1]) if len(sys.argv) == 2 else 7

for reboot in reboots:
    if len(time_per_day) == daysToShow:
        break
    reboot = reboot.split()
    if len(reboot) < 8:
        continue

    reboot_date = " ".join(reboot[5:7])
    if reboot[-1] == "running":
        reboot_time = datetime.strptime(
            reboot[-3]+" "+reboot_date, "%H:%M %b %d")
        current_time = datetime.strptime(datetime.strftime(datetime.now(
        ), time_fmt)+" "+datetime.strftime(datetime.now(), date_fmt), "%H:%M %b %d")
        time_per_day[reboot_date] = current_time - reboot_time
    else:
        reboot_duration = datetime.strptime(reboot[-1][1:-1], time_fmt)
        try:
            time_per_day[reboot_date] += timedelta(
                hours=reboot_duration.hour, minutes=reboot_duration.minute)
        except KeyError:
            time_per_day[reboot_date] = timedelta(
                hours=reboot_duration.hour, minutes=reboot_duration.minute)
try:
    with open("/home/sahaj/locktimes", "r") as f:
        locktimes_dict = {}
        locktimes = f.read().split("\n")
        for locktime in locktimes:
            if locktime:
                locktime = locktime.split("-")
                locktimes_dict[locktime[0].strip()] = locktime[1].strip()
except FileNotFoundError:
    pass

for day in time_per_day:
    try:
        locktime = datetime.strptime(locktimes_dict[day], time_fmt)
        locktime = timedelta(hours=locktime.hour, minutes=locktime.minute)
        net_time = time_per_day[day] - locktime
        formatted_net_time = ":".join(str(net_time).split(":")[0:2])
        print(day + ": " + formatted_net_time)
    except (NameError, KeyError):
        formatted_time = ":".join(str(time_per_day[day]).split(":")[0:2])
        print(day + ": " + formatted_time)
